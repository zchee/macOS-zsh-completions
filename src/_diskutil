#compdef diskutil

# -----------------------------------------------------------------------------
# The BSD-3-Clause License
#
# Copyright (c) 2016, Koichi Shiraishi
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# * Neither the name of que nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
# -----------------------------------------------------------------------------

function _diskutil() {
  local context curcontext=$curcontext state line ret=1
  declare -A opt_args

  local -a commands
  commands=(
  'list:List the partitions of a disk'
  'info:Get information on a specific disk or partition'
  'information:Get information on a specific disk or partition'
  'listFilesystems:List file systems available for formatting'
  'activity:Continuous log of system-wide disk arbitration'
  'umount:Unmount a single volume'
  'unmount:Unmount a single volume'
  'unmountDisk:Unmount an entire disk (all volumes)'
  'eject:Eject a disk'
  'mount:Mount a single volume'
  'mountDisk:Mount an entire disk (all mountable volumes)'
  'enableJournal:Enable HFS+ journaling on a mounted HFS+ volume'
  'disableJournal:Disable HFS+ journaling on a mounted HFS+ volume'
  'moveJournal:Move the HFS+ journal onto another volume'
  'enableOwnership:Exact on-disk User/Group IDs on a mounted volume'
  'disableOwnership:Ignore on-disk User/Group IDs on a mounted volume'
  'rename:Rename a volume'
  'renameVolume:Rename a volume'
  'verifyVolume:Verify the file system data structures of a volume'
  'repairVolume:Repair the file system data structures of a volume'
  'verifyDisk:Verify the components of a partition map of a disk'
  'repairDisk:Repair the components of a partition map of a disk'
  'eraseDisk:Erase an existing disk, removing all volumes'
  'eraseVolume:Erase an existing volume'
  'reformat:Erase an existing volume with same name and type'
  'eraseOptical:Erase optical media (CD/RW, DVD/RW, etc.)'
  'zeroDisk:Erase a disk, writing zeros to the media'
  'randomDisk:Erase a disk, writing random data to the media'
  'secureErase:Securely erase a disk or freespace on a volume'
  'partitionDisk:(re)Partition a disk, removing all volumes'
  'resizeVolume:Resize a volume, increasing or decreasing its size'
  'splitPartition:Split an existing partition into two or more'
  'mergePartitions:Combine two or more existing partitions into one'
  'appleRAID:Perform additional verbs related to AppleRAID'
  'coreStorage:Perform additional verbs related to CoreStorage'
  'apfs:Perform additional verbs related to APFS'
  )

  _arguments -C \
    "1: :{_describe 'diskutil command' commands}" \
    '*:: :->args' \
    && ret=0

  case $state in
    args)
      case $words[1] in
        list)
          _arguments \
            '-plist[output user-readable property list]'
            '*:devices:__devices'
          ;;
        info)
          _arguments \
            '-plist[output user-readable property list]' \
            '-all[output the all disks whole disks and their partitions]'
            '*:devices:__devices'
          ;;
        activity)
          _arguments \
          ;;
        listFilesystems)
          _arguments \
            '-plist[output user-readable property list]'
          ;;
      esac
      ;;
  esac

  return ret
}

_diskutil "$@"

# vim:ft=zsh:et:sts=2:sw=2
